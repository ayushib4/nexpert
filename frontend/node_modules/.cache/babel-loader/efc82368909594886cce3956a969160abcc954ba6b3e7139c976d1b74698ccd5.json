{"ast":null,"code":"import axios from 'axios';\nconst BASE_URL = 'http://0.0.0.0:8000';\nconst exampleExpandedData = {\n  \"url\": \"https://arxiv.org/pdf/1810.04805.pdf\",\n  \"concepts\": [{\n    \"name\": \"Concept 1\",\n    \"referenceUrl\": \"https://referenceUrl1\",\n    \"description\": \"This is a description of Concept 1\",\n    \"referenceText\": \"\",\n    \"id\": \"\",\n    \"parent\": \"\",\n    \"children\": []\n  }, {\n    \"name\": \"Concept 2\",\n    \"referenceUrl\": \"https://referenceUrl2\",\n    \"description\": \"This is a description of Concept 2\",\n    \"referenceText\": \"\",\n    \"id\": \"\",\n    \"parent\": \"\",\n    \"children\": []\n  }\n  //... more concept nodes\n  ]\n};\n\nconst exampleLongDescription = {\n  \"expandedDescription\": \"This is an expanded description of the concept. It includes additional details and context drawn from the reference paper. For example, the original paper discusses the concept in the context of a larger study on...\"\n};\nexport async function generateTwoLayers(searchTerm) {\n  return axios.post(`${BASE_URL}/query`, {\n    query: searchTerm\n  }).then(response => {\n    console.log(response);\n    return response.data;\n  }).catch(error => {\n    console.error('Error sending query:', error);\n    // instead of throwing the error, return an error indication\n    return {\n      error: true,\n      message: error.message\n    };\n  });\n}\nexport async function getLongDescription(node) {\n  // return axios.post(`${BASE_URL}/more-info`, { concept: node })\n  //   .then(response => {console.log(response); return response.data})\n  //   .catch(error => {\n  //     console.error('Error fetching text:', error);\n  //     throw error;\n  //   });\n  return exampleLongDescription;\n}\nexport async function expandGraphWithNewNodes(nodeId) {\n  // return axios.post(`${BASE_URL}/expand-graph-with-new-nodes`, { concept: nodeId })\n  //   .then(response => response.data)\n  //   .catch(error => {\n  //     console.error('Error expanding graph with new nodes:', error);\n  //     throw error;\n  //   });\n  return exampleExpandedData;\n}","map":{"version":3,"names":["axios","BASE_URL","exampleExpandedData","exampleLongDescription","generateTwoLayers","searchTerm","post","query","then","response","console","log","data","catch","error","message","getLongDescription","node","expandGraphWithNewNodes","nodeId"],"sources":["/Users/ayushi/Desktop/repos/nexpert-frontend/src/api/apiCalls.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'http://0.0.0.0:8000';\n\nconst exampleExpandedData = {\n  \"url\": \"https://arxiv.org/pdf/1810.04805.pdf\",\n  \"concepts\": [\n    {\n      \"name\": \"Concept 1\",\n      \"referenceUrl\": \"https://referenceUrl1\",\n      \"description\": \"This is a description of Concept 1\",\n      \"referenceText\": \"\",\n      \"id\": \"\",\n      \"parent\": \"\",\n      \"children\": []\n    },\n    {\n      \"name\": \"Concept 2\",\n      \"referenceUrl\": \"https://referenceUrl2\",\n      \"description\": \"This is a description of Concept 2\",\n      \"referenceText\": \"\",\n      \"id\": \"\",\n      \"parent\": \"\",\n      \"children\": []\n    },\n    //... more concept nodes\n  ]\n}\n\nconst exampleLongDescription = {\n  \"expandedDescription\": \"This is an expanded description of the concept. It includes additional details and context drawn from the reference paper. For example, the original paper discusses the concept in the context of a larger study on...\"\n};\n\n\nexport async function generateTwoLayers(searchTerm) {\n  return axios.post(`${BASE_URL}/query`, { query: searchTerm })\n    .then(response => {console.log(response); return response.data})\n    .catch(error => {\n      console.error('Error sending query:', error);\n      // instead of throwing the error, return an error indication\n      return { error: true, message: error.message };\n    });\n}\n\nexport async function getLongDescription(node) {\n  // return axios.post(`${BASE_URL}/more-info`, { concept: node })\n  //   .then(response => {console.log(response); return response.data})\n  //   .catch(error => {\n  //     console.error('Error fetching text:', error);\n  //     throw error;\n  //   });\n  return exampleLongDescription;\n}\n\nexport async function expandGraphWithNewNodes(nodeId) {\n  // return axios.post(`${BASE_URL}/expand-graph-with-new-nodes`, { concept: nodeId })\n  //   .then(response => response.data)\n  //   .catch(error => {\n  //     console.error('Error expanding graph with new nodes:', error);\n  //     throw error;\n  //   });\n  return exampleExpandedData;\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,qBAAqB;AAEtC,MAAMC,mBAAmB,GAAG;EAC1B,KAAK,EAAE,sCAAsC;EAC7C,UAAU,EAAE,CACV;IACE,MAAM,EAAE,WAAW;IACnB,cAAc,EAAE,uBAAuB;IACvC,aAAa,EAAE,oCAAoC;IACnD,eAAe,EAAE,EAAE;IACnB,IAAI,EAAE,EAAE;IACR,QAAQ,EAAE,EAAE;IACZ,UAAU,EAAE;EACd,CAAC,EACD;IACE,MAAM,EAAE,WAAW;IACnB,cAAc,EAAE,uBAAuB;IACvC,aAAa,EAAE,oCAAoC;IACnD,eAAe,EAAE,EAAE;IACnB,IAAI,EAAE,EAAE;IACR,QAAQ,EAAE,EAAE;IACZ,UAAU,EAAE;EACd;EACA;EAAA;AAEJ,CAAC;;AAED,MAAMC,sBAAsB,GAAG;EAC7B,qBAAqB,EAAE;AACzB,CAAC;AAGD,OAAO,eAAeC,iBAAiBA,CAACC,UAAU,EAAE;EAClD,OAAOL,KAAK,CAACM,IAAI,CAAE,GAAEL,QAAS,QAAO,EAAE;IAAEM,KAAK,EAAEF;EAAW,CAAC,CAAC,CAC1DG,IAAI,CAACC,QAAQ,IAAI;IAACC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IAAE,OAAOA,QAAQ,CAACG,IAAI;EAAA,CAAC,CAAC,CAC/DC,KAAK,CAACC,KAAK,IAAI;IACdJ,OAAO,CAACI,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C;IACA,OAAO;MAAEA,KAAK,EAAE,IAAI;MAAEC,OAAO,EAAED,KAAK,CAACC;IAAQ,CAAC;EAChD,CAAC,CAAC;AACN;AAEA,OAAO,eAAeC,kBAAkBA,CAACC,IAAI,EAAE;EAC7C;EACA;EACA;EACA;EACA;EACA;EACA,OAAOd,sBAAsB;AAC/B;AAEA,OAAO,eAAee,uBAAuBA,CAACC,MAAM,EAAE;EACpD;EACA;EACA;EACA;EACA;EACA;EACA,OAAOjB,mBAAmB;AAC5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}