{"ast":null,"code":"var _jsxFileName = \"/Users/ayushi/Desktop/repos/nexpert-frontend/src/components/Graph.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport Tree from 'react-d3-tree';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { NodeContext } from '../NodeContext.js';\nimport { getLongDescription, expandGraphWithNewNodes } from '../api/apiCalls.js'; // or wherever your API functions are stored\nimport './styles/Graph.css';\n\n// Helper functions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction mergeData(nodeId, treeData, expandedData) {\n  // Function to recursively search for a node\n  function findNode(node) {\n    if (node.id === nodeId) {\n      var _node$children;\n      // Node found, append children\n      node.children = (_node$children = node.children) === null || _node$children === void 0 ? void 0 : _node$children.concat(expandedData);\n    } else if (node.children) {\n      // Node not found, search children\n      node.children.forEach(findNode);\n    }\n  }\n\n  // Make a deep copy of the tree data and search it\n  const newTreeData = cloneDeep(treeData);\n  findNode(newTreeData);\n  return newTreeData;\n}\n\n// Function to recursively update node description\nfunction updateDescription(node, currentNode, longDescription) {\n  if (node.id === currentNode.id) {\n    // Return a new object for the node\n    return {\n      ...node,\n      description: longDescription\n    };\n  }\n  if (node.children) {\n    // Iterate through children, creating new objects for any that have changed\n    return {\n      ...node,\n      children: node.children.map(child => updateDescription(child, currentNode, longDescription))\n    };\n  }\n  // No changes to this node or its children\n  return node;\n}\n;\nconst getLongDesc = (node, callbackFunc, activeVar) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const paperInsights = await getLongDescription(node); // Add any necessary arguments\n      console.log('hi');\n      // Update node description in treeData\n      const updatedTreeData = updateDescription(activeVar, node.data, paperInsights === null || paperInsights === void 0 ? void 0 : paperInsights.expandedDescription);\n      callbackFunc(updatedTreeData);\n      resolve(updatedTreeData); // Return the updated data\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\nconst expandGraph = async (node, callbackFunc, activeVar) => {\n  const expandedGraphData = await expandGraphWithNewNodes(node.data.id);\n  const newTreeData = mergeData(node.data.id, activeVar, expandedGraphData);\n  callbackFunc(newTreeData);\n};\n\n// Main component\nconst Graph = () => {\n  _s();\n  const {\n    scale,\n    translate,\n    handleNodeClick,\n    currentNode,\n    setLoading,\n    treeData,\n    setTreeData\n  } = useContext(NodeContext);\n  useEffect(() => {\n    if (!currentNode) return;\n    const fetchData = async () => {\n      try {\n        if (currentNode && currentNode.data) {\n          setLoading(true);\n          const updatedTreeData = await getLongDesc(currentNode, setTreeData, treeData);\n          await expandGraph(currentNode, setTreeData, updatedTreeData);\n          setLoading(false);\n        }\n      } catch (error) {\n        console.error('An error occurred while fetching data:', error);\n      }\n    };\n    fetchData();\n  }, [currentNode]);\n  const onClick = nodeData => {\n    handleNodeClick(nodeData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph\",\n    style: {\n      transform: `scale(${scale})`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"helperText\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        children: \"Use cmd-s (in mac) or ctrl-q (in windows) to open the prompt editor.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 35\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), treeData && /*#__PURE__*/_jsxDEV(Tree, {\n      data: treeData,\n      translate: translate,\n      onNodeClick: onClick,\n      separation: {\n        siblings: 1,\n        nonSiblings: 1\n      }\n      // pathFunc=\"step\"\n      ,\n      rootNodeClassName: \"node__root\",\n      branchNodeClassName: \"node__branch\",\n      leafNodeClassName: \"node__leaf\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(Graph, \"zaTW2ORpZIUeg1dSEZAQa2t6Am8=\");\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Tree","cloneDeep","NodeContext","getLongDescription","expandGraphWithNewNodes","jsxDEV","_jsxDEV","mergeData","nodeId","treeData","expandedData","findNode","node","id","_node$children","children","concat","forEach","newTreeData","updateDescription","currentNode","longDescription","description","map","child","getLongDesc","callbackFunc","activeVar","Promise","resolve","reject","paperInsights","console","log","updatedTreeData","data","expandedDescription","error","expandGraph","expandedGraphData","Graph","_s","scale","translate","handleNodeClick","setLoading","setTreeData","fetchData","onClick","nodeData","className","style","transform","fileName","_jsxFileName","lineNumber","columnNumber","onNodeClick","separation","siblings","nonSiblings","rootNodeClassName","branchNodeClassName","leafNodeClassName","_c","$RefreshReg$"],"sources":["/Users/ayushi/Desktop/repos/nexpert-frontend/src/components/Graph.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport Tree from 'react-d3-tree';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { NodeContext } from '../NodeContext.js';\nimport { getLongDescription, expandGraphWithNewNodes } from '../api/apiCalls.js'; // or wherever your API functions are stored\nimport './styles/Graph.css';\n\n// Helper functions\nfunction mergeData(nodeId, treeData, expandedData) {\n  // Function to recursively search for a node\n  function findNode(node) {\n    if (node.id === nodeId) {\n      // Node found, append children\n      node.children = node.children?.concat(expandedData);\n    } else if (node.children) {\n      // Node not found, search children\n      node.children.forEach(findNode);\n    }\n  }\n\n  // Make a deep copy of the tree data and search it\n  const newTreeData = cloneDeep(treeData);\n  findNode(newTreeData);\n\n  return newTreeData;\n}\n\n// Function to recursively update node description\nfunction updateDescription(node, currentNode, longDescription) {\n  if (node.id === currentNode.id) {\n    // Return a new object for the node\n    return { ...node, description: longDescription };\n  }\n  if (node.children) {\n    // Iterate through children, creating new objects for any that have changed\n    return {\n      ...node,\n      children: node.children.map(child => updateDescription(child, currentNode, longDescription)),\n    };\n  }\n  // No changes to this node or its children\n  return node;\n};\n\nconst getLongDesc = (node, callbackFunc, activeVar) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const paperInsights = await getLongDescription(node); // Add any necessary arguments\n      console.log('hi')\n      // Update node description in treeData\n      const updatedTreeData = updateDescription(activeVar, node.data, paperInsights?.expandedDescription);\n      callbackFunc(updatedTreeData);\n      resolve(updatedTreeData); // Return the updated data\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\nconst expandGraph = async (node, callbackFunc, activeVar) => {\n  const expandedGraphData = await expandGraphWithNewNodes(node.data.id);\n  const newTreeData = mergeData(node.data.id, activeVar, expandedGraphData);\n  callbackFunc(newTreeData)\n}\n\n// Main component\nconst Graph = () => {\n  const { scale, translate, handleNodeClick, currentNode, setLoading, treeData, setTreeData } = useContext(NodeContext);\n\n  useEffect(() => {\n    if (!currentNode) return;\n    \n    const fetchData = async () => {\n      try {\n        if (currentNode && currentNode.data) {\n          setLoading(true);\n          const updatedTreeData = await getLongDesc(currentNode, setTreeData, treeData);\n          await expandGraph(currentNode, setTreeData, updatedTreeData);\n          setLoading(false);\n        }\n      } catch (error) {\n        console.error('An error occurred while fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, [currentNode]); \n\n\n  const onClick = (nodeData) => {\n    handleNodeClick(nodeData);\n  };\n\n  return (\n    <div className=\"graph\" style={{ transform: `scale(${scale})` }}>\n      <div className=\"helperText\"><i>Use cmd-s (in mac) or ctrl-q (in windows) to open the prompt editor.</i></div>\n      {treeData && (\n        <Tree \n          data={treeData} \n          translate={translate}\n          onNodeClick={onClick} \n          separation={{ siblings: 1, nonSiblings: 1 }}\n          // pathFunc=\"step\"\n          rootNodeClassName=\"node__root\"\n          branchNodeClassName=\"node__branch\"\n          leafNodeClassName=\"node__leaf\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Graph;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,OAAOC,IAAI,MAAM,eAAe;AAChC,OAAOC,SAAS,MAAM,kBAAkB;AACxC,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,kBAAkB,EAAEC,uBAAuB,QAAQ,oBAAoB,CAAC,CAAC;AAClF,OAAO,oBAAoB;;AAE3B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,SAASA,CAACC,MAAM,EAAEC,QAAQ,EAAEC,YAAY,EAAE;EACjD;EACA,SAASC,QAAQA,CAACC,IAAI,EAAE;IACtB,IAAIA,IAAI,CAACC,EAAE,KAAKL,MAAM,EAAE;MAAA,IAAAM,cAAA;MACtB;MACAF,IAAI,CAACG,QAAQ,IAAAD,cAAA,GAAGF,IAAI,CAACG,QAAQ,cAAAD,cAAA,uBAAbA,cAAA,CAAeE,MAAM,CAACN,YAAY,CAAC;IACrD,CAAC,MAAM,IAAIE,IAAI,CAACG,QAAQ,EAAE;MACxB;MACAH,IAAI,CAACG,QAAQ,CAACE,OAAO,CAACN,QAAQ,CAAC;IACjC;EACF;;EAEA;EACA,MAAMO,WAAW,GAAGjB,SAAS,CAACQ,QAAQ,CAAC;EACvCE,QAAQ,CAACO,WAAW,CAAC;EAErB,OAAOA,WAAW;AACpB;;AAEA;AACA,SAASC,iBAAiBA,CAACP,IAAI,EAAEQ,WAAW,EAAEC,eAAe,EAAE;EAC7D,IAAIT,IAAI,CAACC,EAAE,KAAKO,WAAW,CAACP,EAAE,EAAE;IAC9B;IACA,OAAO;MAAE,GAAGD,IAAI;MAAEU,WAAW,EAAED;IAAgB,CAAC;EAClD;EACA,IAAIT,IAAI,CAACG,QAAQ,EAAE;IACjB;IACA,OAAO;MACL,GAAGH,IAAI;MACPG,QAAQ,EAAEH,IAAI,CAACG,QAAQ,CAACQ,GAAG,CAACC,KAAK,IAAIL,iBAAiB,CAACK,KAAK,EAAEJ,WAAW,EAAEC,eAAe,CAAC;IAC7F,CAAC;EACH;EACA;EACA,OAAOT,IAAI;AACb;AAAC;AAED,MAAMa,WAAW,GAAGA,CAACb,IAAI,EAAEc,YAAY,EAAEC,SAAS,KAAK;EACrD,OAAO,IAAIC,OAAO,CAAC,OAAOC,OAAO,EAAEC,MAAM,KAAK;IAC5C,IAAI;MACF,MAAMC,aAAa,GAAG,MAAM5B,kBAAkB,CAACS,IAAI,CAAC,CAAC,CAAC;MACtDoB,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;MACjB;MACA,MAAMC,eAAe,GAAGf,iBAAiB,CAACQ,SAAS,EAAEf,IAAI,CAACuB,IAAI,EAAEJ,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEK,mBAAmB,CAAC;MACnGV,YAAY,CAACQ,eAAe,CAAC;MAC7BL,OAAO,CAACK,eAAe,CAAC,CAAC,CAAC;IAC5B,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdP,MAAM,CAACO,KAAK,CAAC;IACf;EACF,CAAC,CAAC;AACJ,CAAC;AAED,MAAMC,WAAW,GAAG,MAAAA,CAAO1B,IAAI,EAAEc,YAAY,EAAEC,SAAS,KAAK;EAC3D,MAAMY,iBAAiB,GAAG,MAAMnC,uBAAuB,CAACQ,IAAI,CAACuB,IAAI,CAACtB,EAAE,CAAC;EACrE,MAAMK,WAAW,GAAGX,SAAS,CAACK,IAAI,CAACuB,IAAI,CAACtB,EAAE,EAAEc,SAAS,EAAEY,iBAAiB,CAAC;EACzEb,YAAY,CAACR,WAAW,CAAC;AAC3B,CAAC;;AAED;AACA,MAAMsB,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM;IAAEC,KAAK;IAAEC,SAAS;IAAEC,eAAe;IAAExB,WAAW;IAAEyB,UAAU;IAAEpC,QAAQ;IAAEqC;EAAY,CAAC,GAAGjD,UAAU,CAACK,WAAW,CAAC;EAErHJ,SAAS,CAAC,MAAM;IACd,IAAI,CAACsB,WAAW,EAAE;IAElB,MAAM2B,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,IAAI3B,WAAW,IAAIA,WAAW,CAACe,IAAI,EAAE;UACnCU,UAAU,CAAC,IAAI,CAAC;UAChB,MAAMX,eAAe,GAAG,MAAMT,WAAW,CAACL,WAAW,EAAE0B,WAAW,EAAErC,QAAQ,CAAC;UAC7E,MAAM6B,WAAW,CAAClB,WAAW,EAAE0B,WAAW,EAAEZ,eAAe,CAAC;UAC5DW,UAAU,CAAC,KAAK,CAAC;QACnB;MACF,CAAC,CAAC,OAAOR,KAAK,EAAE;QACdL,OAAO,CAACK,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAChE;IACF,CAAC;IAEDU,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAAC3B,WAAW,CAAC,CAAC;EAGjB,MAAM4B,OAAO,GAAIC,QAAQ,IAAK;IAC5BL,eAAe,CAACK,QAAQ,CAAC;EAC3B,CAAC;EAED,oBACE3C,OAAA;IAAK4C,SAAS,EAAC,OAAO;IAACC,KAAK,EAAE;MAAEC,SAAS,EAAG,SAAQV,KAAM;IAAG,CAAE;IAAA3B,QAAA,gBAC7DT,OAAA;MAAK4C,SAAS,EAAC,YAAY;MAAAnC,QAAA,eAACT,OAAA;QAAAS,QAAA,EAAG;MAAoE;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAC5G/C,QAAQ,iBACPH,OAAA,CAACN,IAAI;MACHmC,IAAI,EAAE1B,QAAS;MACfkC,SAAS,EAAEA,SAAU;MACrBc,WAAW,EAAET,OAAQ;MACrBU,UAAU,EAAE;QAAEC,QAAQ,EAAE,CAAC;QAAEC,WAAW,EAAE;MAAE;MAC1C;MAAA;MACAC,iBAAiB,EAAC,YAAY;MAC9BC,mBAAmB,EAAC,cAAc;MAClCC,iBAAiB,EAAC;IAAY;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACf,EAAA,CA5CID,KAAK;AAAAwB,EAAA,GAALxB,KAAK;AA8CX,eAAeA,KAAK;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}