{"ast":null,"code":"import React from 'react';\nimport { select } from 'd3-selection';\nimport DefaultNodeElement from './DefaultNodeElement.js';\nexport default class Node extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.nodeRef = null;\n    this.state = {\n      transform: this.setTransform(this.props.position, this.props.parent, this.props.orientation, true),\n      initialStyle: {\n        opacity: 0\n      },\n      wasClicked: false\n    };\n    this.shouldNodeTransform = (ownProps, nextProps, ownState, nextState) => nextProps.subscriptions !== ownProps.subscriptions || nextProps.position.x !== ownProps.position.x || nextProps.position.y !== ownProps.position.y || nextProps.orientation !== ownProps.orientation || nextState.wasClicked !== ownState.wasClicked;\n    // TODO: needs tests\n    this.renderNodeElement = () => {\n      const {\n        data,\n        hierarchyPointNode,\n        renderCustomNodeElement\n      } = this.props;\n      const renderNode = typeof renderCustomNodeElement === 'function' ? renderCustomNodeElement : DefaultNodeElement;\n      const nodeProps = {\n        hierarchyPointNode: hierarchyPointNode,\n        nodeDatum: data,\n        toggleNode: this.handleNodeToggle,\n        onNodeClick: this.handleOnClick,\n        onNodeMouseOver: this.handleOnMouseOver,\n        onNodeMouseOut: this.handleOnMouseOut,\n        addChildren: this.handleAddChildren\n      };\n      return renderNode(nodeProps);\n    };\n    this.handleNodeToggle = () => {\n      this.setState({\n        wasClicked: true\n      });\n      this.props.onNodeToggle(this.props.data.__rd3t.id);\n    };\n    this.handleOnClick = evt => {\n      this.setState({\n        wasClicked: true\n      });\n      this.props.onNodeClick(this.props.hierarchyPointNode, evt);\n    };\n    this.handleOnMouseOver = evt => {\n      this.props.onNodeMouseOver(this.props.hierarchyPointNode, evt);\n    };\n    this.handleOnMouseOut = evt => {\n      this.props.onNodeMouseOut(this.props.hierarchyPointNode, evt);\n    };\n    this.handleAddChildren = childrenData => {\n      this.props.handleAddChildrenToNode(this.props.data.__rd3t.id, childrenData);\n    };\n  }\n  componentDidMount() {\n    this.commitTransform();\n  }\n  componentDidUpdate() {\n    if (this.state.wasClicked) {\n      this.props.centerNode(this.props.hierarchyPointNode);\n      this.setState({\n        wasClicked: false\n      });\n    }\n    this.commitTransform();\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n    return this.shouldNodeTransform(this.props, nextProps, this.state, nextState);\n  }\n  setTransform(position, parent, orientation, shouldTranslateToOrigin = false) {\n    if (shouldTranslateToOrigin) {\n      const hasParent = parent !== null && parent !== undefined;\n      const originX = hasParent ? parent.x : 0;\n      const originY = hasParent ? parent.y : 0;\n      return orientation === 'horizontal' ? `translate(${originY},${originX})` : `translate(${originX},${originY})`;\n    }\n    return orientation === 'horizontal' ? `translate(${position.y},${position.x})` : `translate(${position.x},${position.y})`;\n  }\n  applyTransform(transform, transitionDuration, opacity = 1, done = () => {}) {\n    if (this.props.enableLegacyTransitions) {\n      select(this.nodeRef)\n      // @ts-ignore\n      .transition().duration(transitionDuration).attr('transform', transform).style('opacity', opacity).on('end', done);\n    } else {\n      select(this.nodeRef).attr('transform', transform).style('opacity', opacity);\n      done();\n    }\n  }\n  commitTransform() {\n    const {\n      orientation,\n      transitionDuration,\n      position,\n      parent\n    } = this.props;\n    const transform = this.setTransform(position, parent, orientation);\n    this.applyTransform(transform, transitionDuration);\n  }\n  componentWillLeave(done) {\n    const {\n      orientation,\n      transitionDuration,\n      position,\n      parent\n    } = this.props;\n    const transform = this.setTransform(position, parent, orientation, true);\n    this.applyTransform(transform, transitionDuration, 0, done);\n  }\n  render() {\n    const {\n      data,\n      nodeClassName\n    } = this.props;\n    return React.createElement(\"g\", {\n      id: data.__rd3t.id,\n      ref: n => {\n        this.nodeRef = n;\n      },\n      style: this.state.initialStyle,\n      className: [data.children && data.children.length > 0 ? 'rd3t-node' : 'rd3t-leaf-node', nodeClassName].join(' ').trim(),\n      transform: this.state.transform\n    }, this.renderNodeElement());\n  }\n}","map":{"version":3,"names":["React","select","DefaultNodeElement","Node","Component","constructor","arguments","nodeRef","state","transform","setTransform","props","position","parent","orientation","initialStyle","opacity","wasClicked","shouldNodeTransform","ownProps","nextProps","ownState","nextState","subscriptions","x","y","renderNodeElement","data","hierarchyPointNode","renderCustomNodeElement","renderNode","nodeProps","nodeDatum","toggleNode","handleNodeToggle","onNodeClick","handleOnClick","onNodeMouseOver","handleOnMouseOver","onNodeMouseOut","handleOnMouseOut","addChildren","handleAddChildren","setState","onNodeToggle","__rd3t","id","evt","childrenData","handleAddChildrenToNode","componentDidMount","commitTransform","componentDidUpdate","centerNode","shouldComponentUpdate","shouldTranslateToOrigin","hasParent","undefined","originX","originY","applyTransform","transitionDuration","done","enableLegacyTransitions","transition","duration","attr","style","on","componentWillLeave","render","nodeClassName","createElement","ref","n","className","children","length","join","trim"],"sources":["/Users/ayushi/Desktop/repos/nexpert-frontend/node_modules/react-d3-tree/lib/esm/Node/index.js"],"sourcesContent":["import React from 'react';\nimport { select } from 'd3-selection';\nimport DefaultNodeElement from './DefaultNodeElement.js';\nexport default class Node extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.nodeRef = null;\n        this.state = {\n            transform: this.setTransform(this.props.position, this.props.parent, this.props.orientation, true),\n            initialStyle: {\n                opacity: 0,\n            },\n            wasClicked: false,\n        };\n        this.shouldNodeTransform = (ownProps, nextProps, ownState, nextState) => nextProps.subscriptions !== ownProps.subscriptions ||\n            nextProps.position.x !== ownProps.position.x ||\n            nextProps.position.y !== ownProps.position.y ||\n            nextProps.orientation !== ownProps.orientation ||\n            nextState.wasClicked !== ownState.wasClicked;\n        // TODO: needs tests\n        this.renderNodeElement = () => {\n            const { data, hierarchyPointNode, renderCustomNodeElement } = this.props;\n            const renderNode = typeof renderCustomNodeElement === 'function' ? renderCustomNodeElement : DefaultNodeElement;\n            const nodeProps = {\n                hierarchyPointNode: hierarchyPointNode,\n                nodeDatum: data,\n                toggleNode: this.handleNodeToggle,\n                onNodeClick: this.handleOnClick,\n                onNodeMouseOver: this.handleOnMouseOver,\n                onNodeMouseOut: this.handleOnMouseOut,\n                addChildren: this.handleAddChildren,\n            };\n            return renderNode(nodeProps);\n        };\n        this.handleNodeToggle = () => {\n            this.setState({ wasClicked: true });\n            this.props.onNodeToggle(this.props.data.__rd3t.id);\n        };\n        this.handleOnClick = evt => {\n            this.setState({ wasClicked: true });\n            this.props.onNodeClick(this.props.hierarchyPointNode, evt);\n        };\n        this.handleOnMouseOver = evt => {\n            this.props.onNodeMouseOver(this.props.hierarchyPointNode, evt);\n        };\n        this.handleOnMouseOut = evt => {\n            this.props.onNodeMouseOut(this.props.hierarchyPointNode, evt);\n        };\n        this.handleAddChildren = childrenData => {\n            this.props.handleAddChildrenToNode(this.props.data.__rd3t.id, childrenData);\n        };\n    }\n    componentDidMount() {\n        this.commitTransform();\n    }\n    componentDidUpdate() {\n        if (this.state.wasClicked) {\n            this.props.centerNode(this.props.hierarchyPointNode);\n            this.setState({ wasClicked: false });\n        }\n        this.commitTransform();\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        return this.shouldNodeTransform(this.props, nextProps, this.state, nextState);\n    }\n    setTransform(position, parent, orientation, shouldTranslateToOrigin = false) {\n        if (shouldTranslateToOrigin) {\n            const hasParent = parent !== null && parent !== undefined;\n            const originX = hasParent ? parent.x : 0;\n            const originY = hasParent ? parent.y : 0;\n            return orientation === 'horizontal'\n                ? `translate(${originY},${originX})`\n                : `translate(${originX},${originY})`;\n        }\n        return orientation === 'horizontal'\n            ? `translate(${position.y},${position.x})`\n            : `translate(${position.x},${position.y})`;\n    }\n    applyTransform(transform, transitionDuration, opacity = 1, done = () => { }) {\n        if (this.props.enableLegacyTransitions) {\n            select(this.nodeRef)\n                // @ts-ignore\n                .transition()\n                .duration(transitionDuration)\n                .attr('transform', transform)\n                .style('opacity', opacity)\n                .on('end', done);\n        }\n        else {\n            select(this.nodeRef)\n                .attr('transform', transform)\n                .style('opacity', opacity);\n            done();\n        }\n    }\n    commitTransform() {\n        const { orientation, transitionDuration, position, parent } = this.props;\n        const transform = this.setTransform(position, parent, orientation);\n        this.applyTransform(transform, transitionDuration);\n    }\n    componentWillLeave(done) {\n        const { orientation, transitionDuration, position, parent } = this.props;\n        const transform = this.setTransform(position, parent, orientation, true);\n        this.applyTransform(transform, transitionDuration, 0, done);\n    }\n    render() {\n        const { data, nodeClassName } = this.props;\n        return (React.createElement(\"g\", { id: data.__rd3t.id, ref: n => {\n                this.nodeRef = n;\n            }, style: this.state.initialStyle, className: [\n                data.children && data.children.length > 0 ? 'rd3t-node' : 'rd3t-leaf-node',\n                nodeClassName,\n            ]\n                .join(' ')\n                .trim(), transform: this.state.transform }, this.renderNodeElement()));\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}