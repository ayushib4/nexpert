{"ast":null,"code":"var _jsxFileName = \"/Users/ayushi/Desktop/repos/nexpert-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { NodeProvider } from \"./NodeContext.js\";\nimport ExpandedNode from \"./components/ExpandedNode.js\";\nimport Graph from \"./components/Graph.js\";\nimport History from \"./components/History.js\";\nimport PromptBar from \"./components/PromptBar.js\";\nimport \"./App.css\";\n\n// This is where the data needs to be passed in...\n// TODO: We need to do an array of papers and map over them to generate individual graphs\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isPromptBarVisible, setPromptBarVisible] = useState(false);\n  useEffect(() => {\n    // Keep this later\n    const handleKeyDown = event => {\n      if (event.metaKey && event.key === \"s\") {\n        event.preventDefault();\n        setPromptBarVisible(true);\n      }\n      if (event.ctrlKey && event.key == \"q\") {\n        event.preventDefault();\n        setPromptBarVisible(true);\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, []);\n  const closeSearchBar = () => {\n    setPromptBarVisible(false);\n  };\n  return /*#__PURE__*/_jsxDEV(NodeProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [isPromptBarVisible && /*#__PURE__*/_jsxDEV(PromptBar, {\n        onClose: closeSearchBar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(History, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ExpandedNode, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Graph, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qD53JIADtrR6Azp08NZ+6KrfWKQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","NodeProvider","ExpandedNode","Graph","History","PromptBar","jsxDEV","_jsxDEV","App","_s","isPromptBarVisible","setPromptBarVisible","handleKeyDown","event","metaKey","key","preventDefault","ctrlKey","window","addEventListener","removeEventListener","closeSearchBar","children","className","onClose","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ayushi/Desktop/repos/nexpert-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { NodeProvider } from \"./NodeContext.js\";\nimport ExpandedNode from \"./components/ExpandedNode.js\";\nimport Graph from \"./components/Graph.js\";\nimport History from \"./components/History.js\";\nimport PromptBar from \"./components/PromptBar.js\";\n\nimport \"./App.css\";\n\n// This is where the data needs to be passed in...\n// TODO: We need to do an array of papers and map over them to generate individual graphs\n\nfunction App() {\n  const [isPromptBarVisible, setPromptBarVisible] = useState(false);\n\n  useEffect(() => {\n    // Keep this later\n    const handleKeyDown = (event) => {\n      if (event.metaKey && event.key === \"s\") {\n        event.preventDefault();\n        setPromptBarVisible(true);\n      }\n      if (event.ctrlKey && event.key == \"q\") {\n        event.preventDefault();\n        setPromptBarVisible(true);\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, []);\n\n  const closeSearchBar = () => {\n    setPromptBarVisible(false);\n  };\n\n  return (\n    <NodeProvider>\n      <div className=\"App\">\n        {isPromptBarVisible && <PromptBar onClose={closeSearchBar} />}\n        <History />\n        <ExpandedNode />\n        <Graph />\n      </div>\n    </NodeProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,SAAS,MAAM,2BAA2B;AAEjD,OAAO,WAAW;;AAElB;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,kBAAkB,EAAEC,mBAAmB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEjEC,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,aAAa,GAAIC,KAAK,IAAK;MAC/B,IAAIA,KAAK,CAACC,OAAO,IAAID,KAAK,CAACE,GAAG,KAAK,GAAG,EAAE;QACtCF,KAAK,CAACG,cAAc,CAAC,CAAC;QACtBL,mBAAmB,CAAC,IAAI,CAAC;MAC3B;MACA,IAAIE,KAAK,CAACI,OAAO,IAAIJ,KAAK,CAACE,GAAG,IAAI,GAAG,EAAE;QACrCF,KAAK,CAACG,cAAc,CAAC,CAAC;QACtBL,mBAAmB,CAAC,IAAI,CAAC;MAC3B;IACF,CAAC;IAEDO,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEP,aAAa,CAAC;IACjD,OAAO,MAAM;MACXM,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAER,aAAa,CAAC;IACtD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,cAAc,GAAGA,CAAA,KAAM;IAC3BV,mBAAmB,CAAC,KAAK,CAAC;EAC5B,CAAC;EAED,oBACEJ,OAAA,CAACN,YAAY;IAAAqB,QAAA,eACXf,OAAA;MAAKgB,SAAS,EAAC,KAAK;MAAAD,QAAA,GACjBZ,kBAAkB,iBAAIH,OAAA,CAACF,SAAS;QAACmB,OAAO,EAAEH;MAAe;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7DrB,OAAA,CAACH,OAAO;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACXrB,OAAA,CAACL,YAAY;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChBrB,OAAA,CAACJ,KAAK;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEnB;AAACnB,EAAA,CApCQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}