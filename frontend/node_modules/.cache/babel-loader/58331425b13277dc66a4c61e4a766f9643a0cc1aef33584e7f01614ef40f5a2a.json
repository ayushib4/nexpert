{"ast":null,"code":"import node_count from \"./count.js\";\nimport node_each from \"./each.js\";\nimport node_eachBefore from \"./eachBefore.js\";\nimport node_eachAfter from \"./eachAfter.js\";\nimport node_sum from \"./sum.js\";\nimport node_sort from \"./sort.js\";\nimport node_path from \"./path.js\";\nimport node_ancestors from \"./ancestors.js\";\nimport node_descendants from \"./descendants.js\";\nimport node_leaves from \"./leaves.js\";\nimport node_links from \"./links.js\";\nexport default function hierarchy(data, children) {\n  var root = new Node(data),\n    valued = +data.value && (root.value = data.value),\n    node,\n    nodes = [root],\n    child,\n    childs,\n    i,\n    n;\n  if (children == null) children = defaultChildren;\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n  return root.eachBefore(computeHeight);\n}\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\nfunction defaultChildren(d) {\n  return d.children;\n}\nfunction copyData(node) {\n  node.data = node.data.data;\n}\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height; while ((node = node.parent) && node.height < ++height);\n}\nexport function Node(data) {\n  this.data = data;\n  this.depth = this.height = 0;\n  this.parent = null;\n}\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};","map":{"version":3,"names":["node_count","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","node_path","node_ancestors","node_descendants","node_leaves","node_links","hierarchy","data","children","root","Node","valued","value","node","nodes","child","childs","i","n","defaultChildren","pop","length","Array","push","parent","depth","eachBefore","computeHeight","node_copy","copyData","d","height","prototype","constructor","count","each","eachAfter","sum","sort","path","ancestors","descendants","leaves","links","copy"],"sources":["/Users/ayushi/Desktop/repos/nexpert-frontend/node_modules/react-d3-tree/node_modules/d3-hierarchy/src/hierarchy/index.js"],"sourcesContent":["import node_count from \"./count.js\";\nimport node_each from \"./each.js\";\nimport node_eachBefore from \"./eachBefore.js\";\nimport node_eachAfter from \"./eachAfter.js\";\nimport node_sum from \"./sum.js\";\nimport node_sort from \"./sort.js\";\nimport node_path from \"./path.js\";\nimport node_ancestors from \"./ancestors.js\";\nimport node_descendants from \"./descendants.js\";\nimport node_leaves from \"./leaves.js\";\nimport node_links from \"./links.js\";\n\nexport default function hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAOC,SAAS,MAAM,WAAW;AACjC,OAAOC,eAAe,MAAM,iBAAiB;AAC7C,OAAOC,cAAc,MAAM,gBAAgB;AAC3C,OAAOC,QAAQ,MAAM,UAAU;AAC/B,OAAOC,SAAS,MAAM,WAAW;AACjC,OAAOC,SAAS,MAAM,WAAW;AACjC,OAAOC,cAAc,MAAM,gBAAgB;AAC3C,OAAOC,gBAAgB,MAAM,kBAAkB;AAC/C,OAAOC,WAAW,MAAM,aAAa;AACrC,OAAOC,UAAU,MAAM,YAAY;AAEnC,eAAe,SAASC,SAASA,CAACC,IAAI,EAAEC,QAAQ,EAAE;EAChD,IAAIC,IAAI,GAAG,IAAIC,IAAI,CAACH,IAAI,CAAC;IACrBI,MAAM,GAAG,CAACJ,IAAI,CAACK,KAAK,KAAKH,IAAI,CAACG,KAAK,GAAGL,IAAI,CAACK,KAAK,CAAC;IACjDC,IAAI;IACJC,KAAK,GAAG,CAACL,IAAI,CAAC;IACdM,KAAK;IACLC,MAAM;IACNC,CAAC;IACDC,CAAC;EAEL,IAAIV,QAAQ,IAAI,IAAI,EAAEA,QAAQ,GAAGW,eAAe;EAEhD,OAAON,IAAI,GAAGC,KAAK,CAACM,GAAG,CAAC,CAAC,EAAE;IACzB,IAAIT,MAAM,EAAEE,IAAI,CAACD,KAAK,GAAG,CAACC,IAAI,CAACN,IAAI,CAACK,KAAK;IACzC,IAAI,CAACI,MAAM,GAAGR,QAAQ,CAACK,IAAI,CAACN,IAAI,CAAC,MAAMW,CAAC,GAAGF,MAAM,CAACK,MAAM,CAAC,EAAE;MACzDR,IAAI,CAACL,QAAQ,GAAG,IAAIc,KAAK,CAACJ,CAAC,CAAC;MAC5B,KAAKD,CAAC,GAAGC,CAAC,GAAG,CAAC,EAAED,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;QAC3BH,KAAK,CAACS,IAAI,CAACR,KAAK,GAAGF,IAAI,CAACL,QAAQ,CAACS,CAAC,CAAC,GAAG,IAAIP,IAAI,CAACM,MAAM,CAACC,CAAC,CAAC,CAAC,CAAC;QAC1DF,KAAK,CAACS,MAAM,GAAGX,IAAI;QACnBE,KAAK,CAACU,KAAK,GAAGZ,IAAI,CAACY,KAAK,GAAG,CAAC;MAC9B;IACF;EACF;EAEA,OAAOhB,IAAI,CAACiB,UAAU,CAACC,aAAa,CAAC;AACvC;AAEA,SAASC,SAASA,CAAA,EAAG;EACnB,OAAOtB,SAAS,CAAC,IAAI,CAAC,CAACoB,UAAU,CAACG,QAAQ,CAAC;AAC7C;AAEA,SAASV,eAAeA,CAACW,CAAC,EAAE;EAC1B,OAAOA,CAAC,CAACtB,QAAQ;AACnB;AAEA,SAASqB,QAAQA,CAAChB,IAAI,EAAE;EACtBA,IAAI,CAACN,IAAI,GAAGM,IAAI,CAACN,IAAI,CAACA,IAAI;AAC5B;AAEA,OAAO,SAASoB,aAAaA,CAACd,IAAI,EAAE;EAClC,IAAIkB,MAAM,GAAG,CAAC;EACd,GAAGlB,IAAI,CAACkB,MAAM,GAAGA,MAAM,CAAC,QACjB,CAAClB,IAAI,GAAGA,IAAI,CAACW,MAAM,KAAMX,IAAI,CAACkB,MAAM,GAAG,EAAEA,MAAO;AACzD;AAEA,OAAO,SAASrB,IAAIA,CAACH,IAAI,EAAE;EACzB,IAAI,CAACA,IAAI,GAAGA,IAAI;EAChB,IAAI,CAACkB,KAAK,GACV,IAAI,CAACM,MAAM,GAAG,CAAC;EACf,IAAI,CAACP,MAAM,GAAG,IAAI;AACpB;AAEAd,IAAI,CAACsB,SAAS,GAAG1B,SAAS,CAAC0B,SAAS,GAAG;EACrCC,WAAW,EAAEvB,IAAI;EACjBwB,KAAK,EAAEvC,UAAU;EACjBwC,IAAI,EAAEvC,SAAS;EACfwC,SAAS,EAAEtC,cAAc;EACzB4B,UAAU,EAAE7B,eAAe;EAC3BwC,GAAG,EAAEtC,QAAQ;EACbuC,IAAI,EAAEtC,SAAS;EACfuC,IAAI,EAAEtC,SAAS;EACfuC,SAAS,EAAEtC,cAAc;EACzBuC,WAAW,EAAEtC,gBAAgB;EAC7BuC,MAAM,EAAEtC,WAAW;EACnBuC,KAAK,EAAEtC,UAAU;EACjBuC,IAAI,EAAEhB;AACR,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}